{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/roogif.gif","assets/images/cryptaroosbanner.png","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledImg","img","App","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","getData","useEffect","style","backgroundColor","fontSize","padding","backgroundImage","display","flexDirection","textAlign","fontWeight","paddingRight","margin","borderStyle","borderColor","borderWidth","borderRadius","href","class","alt","src","newbanner","paddingTop","marginBottom","paddingLeft","i1","marginTop","className","maxWidth","Number","fontFamily","onClick","e","preventDefault","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","SmartContract","on","location","reload","id","placeholder","min","max","width","disabled","_amount","document","getElementById","value","mint","send","gasLimit","to","from","utils","toWei","toString","once","err","then","receipt","paddingBottom","textDecoration","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.86f938b2.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        name: action.payload.name,\r\n        totalSupply: action.payload.totalSupply,\r\n        cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      let cost = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.cost()\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n          totalSupply,\r\n          cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/Doodlenauts.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        // const NetworkData = await SmartContract.networks[networkId];\r\n        if (networkId == 137) { // IMPORTANT. ONCE YOUR CONTRACT IS ON THE MAIN NET, SWITCH THIS NUMBER TO 1.\r\n                                // MAINNET: 1 | TESTNET: 4 | POLYGON: 137\r\n          const SmartContractObj = new Web3EthContract(\r\n            SmartContract,\r\n            \"0x404270B74619401883E8cB6D8f2e08F984acC0c8\" // **IMPORTANT** PASTE CONTRACT ADDRESS HERE\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Polygon.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Please install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-size: 12px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/roogif.7c27d4ce.gif\";","export default __webpack_public_path__ + \"static/media/cryptaroosbanner.53030c56.png\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/roogif.gif\";\r\nimport newbanner from \"./assets/images/cryptaroosbanner.png\";\r\nimport \"./assets/style.css\"\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: #ffffff;\r\n  padding: 10px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  font-weight: bold;\r\n  font-size: 40px;\r\n  color: #000000;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 350px;\r\n    height: 350px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const claimNFTs = (_amount) => {\r\n    _amount = document.getElementById(\"inputBox\").value;\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Minting your Official CryptaRoo NFT...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      // ********\r\n      // You can change the line above to\r\n      // .whiteListMint(blockchain.account, _amount) if you want only whitelisted\r\n      // users to be able to mint through your website!\r\n      // And after you're done with whitelisted users buying from your website,\r\n      // You can switch it back to .mint(blockchain.account, _amount).\r\n      // ********\r\n      .send({\r\n        gasLimit: 285000 * _amount,\r\n        to: \"0x404270B74619401883E8cB6D8f2e08F984acC0c8\", // the address of your contract\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((30 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong. Check your transaction on Polygonscan to find out what happened!\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"Your CryptaRoo has been successfully minted!\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--black)\", fontSize: 40 }}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 24, backgroundImage: \"url(https://cryptaroos.github.io/minting/backgroundbanner.png)\" }}>\r\n        {/* backgroundColor: \"#F78812\"  */}\r\n        <s.TextTitle\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\", textAlign: \"left\", fontSize: 12, fontWeight: \"bold\", paddingRight: 10, margin: 0,\r\n            borderStyle: \"solid\", borderColor: \"black\", borderWidth: 0,\r\n            borderRadius: 50, textAlign: \"center\", justifySelf: \"center\", justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <a href=\"https://opensea.io\"><img class=\"topImage\" alt={\"BooCrew Logo\"}\r\n            src={newbanner}\r\n            style={{ textAlign: \"center\" }}></img></a>\r\n        </s.TextTitle>\r\n        <s.SpacerMedium />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24, paddingTop: 0 }}>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"} style={{ paddingTop: 0, flexDirection: \"column\", }}>\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 40,\r\n                fontWeight: \"bold\",\r\n                borderStyle: \"solid\",\r\n                borderColor: \"black\",\r\n                borderWidth: 5,\r\n                borderRadius: 20,\r\n                marginBottom: 10,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                backgroundImage: \"linear-gradient(to bottom, #F2CA24, #F0482A)\",\r\n              }}>\r\n              CryptaRoos 1-550: 30 MATIC + Gas! <br></br>\r\n              CryptaRoos 550-5000: 40 MATIC + Gas!\r\n            </s.TextTitle>\r\n            <StyledImg alt={\"BooCrew Hidden\"} src={i1} style={{\r\n              paddingTop: 0, borderStyle: \"solid\", borderColor: \"black\", borderWidth: 5,\r\n              borderRadius: 10\r\n            }} />\r\n            <s.TextTitle style={{\r\n              textAlign: \"center\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"black\",\r\n              borderWidth: 5,\r\n              paddingLeft: 100,\r\n              paddingRight: 100,\r\n              borderRadius: 20,\r\n              marginTop: 10,\r\n              marginBottom: 10,\r\n              backgroundImage: \"linear-gradient(to bottom, #F2CA24, #F0482A)\",\r\n              fontSize: 30\r\n            }}\r\n              className=\"questionMarks\"\r\n            >\r\n              {blockchain.account == null ? \"????\" : (data.totalSupply)}/5000\r\n            </s.TextTitle>\r\n            {/* <s.SpacerMedium/> */}\r\n            <s.Container\r\n              flex={1}\r\n              jc={\"center\"}\r\n              ai={\"center\"}\r\n              style={{\r\n                backgroundColor: \"#FFA537\",\r\n                backgroundImage: \"linear-gradient(to bottom, #F2CA24, #F0482A)\",\r\n                padding: 24,\r\n                paddingTop: 24,\r\n                borderStyle: \"solid\",\r\n                borderColor: \"black\",\r\n                borderWidth: 10,\r\n                borderRadius: 30,\r\n                fontSize: 40,\r\n                maxWidth: 1500\r\n              }}\r\n            >\r\n              {Number(data.totalSupply) == 5000 ? (\r\n                <>\r\n                  <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                    The sale has ended.\r\n                  </s.TextTitle>\r\n                  <s.SpacerSmall />\r\n                  <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                    Dont worry, you're not missing out! You can still get CryptaRoos on{\" \"}\r\n                    <a\r\n                      // target={\"_blank\"}\r\n                      href={\"https://testnets.opensea.io/collection/rinkeby-doodlenauts\"}\r\n                    >\r\n                      Opensea.io\r\n                    </a>\r\n                  </s.TextDescription>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {/* <s.TextTitle style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  1 DOODL costs .01 ETH.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\", fontSize: 30 }}>\r\n                  Excluding gas fees.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall /> */}\r\n                  <s.TextDescription style={{ textAlign: \"center\", fontSize: 40 }}>\r\n                    {feedback}\r\n                  </s.TextDescription>\r\n                  {/* <s.SpacerMedium /> */}\r\n                  {blockchain.account === \"\" ||\r\n                    blockchain.smartContract === null ? (\r\n                    <s.Container ai={\"center\"} jc={\"center\"}>\r\n                      <s.TextDescription style={{\r\n                        fontSize: 60,\r\n                        textAlign: \"center\",\r\n                        marginBottom: 0,\r\n                      }}>\r\n                        Connect to the CryptaRoo Minter!\r\n                      </s.TextDescription>\r\n                      <s.SpacerSmall />\r\n                      <StyledButton\r\n                        style={{ fontFamily: \"coder\" }}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(connect());\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        CONNECT\r\n                      </StyledButton>\r\n                      <s.SpacerLarge />\r\n                      {/* <s.TextDescription style={{textAlign: \"center\", fontSize: 30, marginBottom: 0, paddingBottom: 0}}>\r\n                      <a href=\"https://google.com\">Boo Crew NFT Smart Contract</a>\r\n                    </s.TextDescription> */}\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                        <>\r\n                          <s.SpacerSmall />\r\n                          <s.TextDescription style={{ textAlign: \"center\", fontSize: 50 }}>\r\n                            {blockchain.errorMsg}\r\n                          </s.TextDescription>\r\n                        </>\r\n                      ) : null}\r\n                    </s.Container>\r\n                  ) : (\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"} style={{ marginTop: 0, paddingTop: 0 }}>\r\n                      <form>\r\n                        I want <input\r\n                          id=\"inputBox\"\r\n                          placeholder=\"#\"\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          max=\"5\"\r\n                          style={{\r\n                            fontSize: 60,\r\n                            textAlign: \"center\",\r\n                            backgroundColor: \"#FFA537\",\r\n                            borderWidth: 4,\r\n                            borderColor: \"black\",\r\n                            borderStyle: \"solid\",\r\n                            borderRadius: 40,\r\n                            paddingRight: 10,\r\n                            // marginBottom: 20,\r\n                            // paddingLeft: 0,\r\n                            // marginLeft: 0,\r\n                            width: 80,\r\n                            fontFamily: \"coder\",\r\n                          }}\r\n                        /> CryptaRoo(s)\r\n                      </form>\r\n                      <s.SpacerSmall />\r\n                      <StyledButton\r\n                        style={{ fontFamily: \"coder\" }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs(1);\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"BUSY\" : \"MINT\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  )}\r\n                </>\r\n\r\n              )}\r\n            </s.Container>\r\n            <s.Container\r\n              flex={1}\r\n              jc={\"center\"}\r\n              ai={\"center\"}\r\n              style={{\r\n                backgroundColor: \"#FFA537\",\r\n                backgroundImage: \"linear-gradient(to bottom, #F2CA24, #F0482A)\",\r\n                padding: 24,\r\n                paddingTop: 0,\r\n                borderStyle: \"solid\",\r\n                borderColor: \"black\",\r\n                borderWidth: 10,\r\n                borderRadius: 30,\r\n                fontSize: 40,\r\n                marginTop: 20,\r\n                textAlign: \"left\",\r\n                maxWidth: 1500,\r\n              }}\r\n            >\r\n              <text style={{ marginTop: 20 }}>\r\n                <div style={{\r\n                  textAlign: \"center\",\r\n                  borderStyle: \"solid\",\r\n                  borderRadius: 20,\r\n                  borderWidth: 5,\r\n                  paddingLeft: 10,\r\n                  paddingRight: 10,\r\n                  paddingBottom: 10,\r\n                  backgroundImage: \"linear-gradient(to bottom, #F2CA24, #F0482A)\",\r\n                }}><text className=\"headerText\">CRYPTAROOS ROADMAP </text><br />\r\n                  <text >🇦🇺🦘🥊</text></div>\r\n                <br />\r\n\r\n                <div style={{\r\n                  textAlign: \"center\",\r\n                  borderStyle: \"solid\",\r\n                  borderRadius: 20,\r\n                  borderWidth: 5,\r\n                  paddingLeft: 10,\r\n                  paddingRight: 10,\r\n                  paddingBottom: 0,\r\n                  paddingTop: 10,\r\n                  backgroundImage: \"linear-gradient(to bottom, #F2CA24, #F0482A)\",\r\n                }}><text className=\"titleText\" style={{\r\n                }}>Q4 2021</text><s.SpacerXSmall />                </div>\r\n                <text className=\"subText\">\r\n                  •\tPrep for launch – Deploy Contracts, set up Minting Page, Marketing Campaign<br />\r\n                  •\tLaunch – This will be on Sunday the 14th of November at 4pm AEST<br />\r\n                  •\tGiveaways and Promotions – Giveaways and Promotions will be running on social media to help push the project out to demographics that will be interested in the project\r\n                  <br />•\tTalk to Game Developers about the concept of creating a CryptaRoo game<br />\r\n                  •\tMonthly Meetups, AMA’s.<br /><br />\r\n                </text>\r\n\r\n\r\n\r\n                <div style={{\r\n                  textAlign: \"center\",\r\n                  borderStyle: \"solid\",\r\n                  borderRadius: 20,\r\n                  borderWidth: 5,\r\n                  paddingLeft: 10,\r\n                  paddingRight: 10,\r\n                  paddingBottom: 10,\r\n                  paddingTop: 10,\r\n                  backgroundImage: \"linear-gradient(to bottom, #F2CA24, #F0482A)\",\r\n                }}>\r\n                  <text className=\"titleText\" style={{\r\n                  }}>Q1 2022</text></div><s.SpacerXSmall />\r\n                <text className=\"subText\">\r\n                  •\tInitial Joey NFT Gen 2 Concept Drawn<br />\r\n                  •\tConcept of CryptaRoo marketplace (may not be needed as we have OpenSea)<br />\r\n                  •\tContinuance and development of Marketing Strategy<br />\r\n                  •\tDevelopment of CryptaRoo game – This will be dependent on the success of the CryptaRoos, if there isn’t interest then it may not be done.\r\n                  <br />•\tMonthly Meetups, AMA’s.<br /><br />\r\n                </text>\r\n\r\n                <div style={{\r\n                  textAlign: \"center\",\r\n                  borderStyle: \"solid\",\r\n                  borderRadius: 20,\r\n                  borderWidth: 5,\r\n                  paddingLeft: 10,\r\n                  paddingRight: 10,\r\n                  paddingBottom: 0,\r\n                  paddingTop: 10,\r\n                  paddingBottom: 10,\r\n                  backgroundImage: \"linear-gradient(to bottom, #F2CA24, #F0482A)\",\r\n                }}>\r\n                  <text className=\"titleText\" style={{\r\n                  }}>Q2 2022</text></div><s.SpacerXSmall />\r\n\r\n                <text className=\"subText\">\r\n                  •\tCryptaRoos Game Beta Launch<br />\r\n                  •\tMonthly Meetups, AMA’s.<br />\r\n                  •\tJoey NFT Release<br /><br />\r\n                </text>\r\n\r\n                <text style={{ fontSize: 20 }}>*More will be added to the roadmap as we continue forward. Of course, not all dates are set in stone, we of course hope to deliver on these dates, but cannot be possible without interest from the community.\r\n                <br />*This is the indicative RoadMap for the project, which is subject to change.\r\n                </text><br />\r\n\r\n              </text>\r\n            </s.Container>\r\n          </s.Container>\r\n          {/* <s.SpacerMedium /> */}\r\n        </ResponsiveWrapper>\r\n        <s.SpacerSmall />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription style={{\r\n            textAlign: \"center\", fontSize: 40, borderColor: \"black\",\r\n            borderStyle: \"solid\",\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            borderWidth: 5,\r\n            borderRadius: 20,\r\n            backgroundColor: \"white\",\r\n            backgroundImage: \"linear-gradient(to bottom, #F2CA24, #F0482A)\",\r\n          }}>\r\n            <a\r\n              href=\"https://polygonscan.com/address/0x404270B74619401883E8cB6D8f2e08F984acC0c8\"\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n\r\n                fontSize: 30,\r\n              }}\r\n            >CryptaRoos NFT Smart Contract</a>\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          {/* <s.TextDescription style={{ textAlign: \"center\", fontSize: 9 }}>\r\n          </s.TextDescription> */}\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/theme.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}